# -----------------------------------------------------------------------------
# Standard DevOps project creation options.
#
# Pay close attention to parameters that require values unique
# to you, such as those for Git, Docker, and AWS.
#
# To use Git, Docker, and any provider, be sure to have created
# an account with each.
#
# For Git, before generating the project be sure to create the
# repository and designate as public before
#
# Minimally, anywhere you see an xxx, replace with your relevant value
# -----------------------------------------------------------------------------
project:
    name: Django 2.2 Demo
    description: Sample Django 2.2 using Python 3.7 project
    techstack:
        # -----------------------------------------------------------------------------
        # To see the list of available tech stacks on a Harbormaster instance using command:
        #     harbormaster_cli stack_list --output pretty
        # -----------------------------------------------------------------------------
        name: Django
    model:
        # -----------------------------------------------------------------------------
        #  Unique name of an existing model, a URL to a model file or Git repo,
        #                or full/relative path to a model file.
        #
        # To see the list of supported model types use command:
        #      harbormaster_cli model_types_supported
        #
        # To see the list of available models on a Harbormaster instance use command:
        #      harbormaster_cli model_list --output pretty
        #
        # -----------------------------------------------------------------------------
        name: company model

    # -----------------------------------------------------------------------------
    # DevOps Project Creation Options
    # -----------------------------------------------------------------------------
    options:

        # -----------------------------------------------------------------------------
        # Application parameters
        # -----------------------------------------------------------------------------
        application:
            name: django-demo
            description: Demo Django application generated by Harbormaster
            author: Dev Team
            email: xxxx.xxxxxxxxx@xxxxxxxx.com
            application logo URL: ./img/turnstone.biologics.png
            company name: Turnstone Biologics
            version: 0.0.1

        # -----------------------------------------------------------------------------
        # Docker parameters
        # -----------------------------------------------------------------------------
        docker:
            inUse: false
            username: complexmathguy
            password: xxxxxx
            orgName: xxxxxxxxxx
            repo: django-demo
            tag: latest
            host: #empty uses docker hub default

        # -----------------------------------------------------------------------------
        # CI/CD parameters
        # -----------------------------------------------------------------------------
        cicd:
            # -----------------------------------------------------------------------------
            # options: codeship, circleci, jfrog.pipelines, jenkins, azure, aws, gitlab, bitbucket, github
            # -----------------------------------------------------------------------------
            platform: github

        # -----------------------------------------------------------------------------
        # Git repository parameters
        # -----------------------------------------------------------------------------
        git:
            name: git_test # an arbitrary name
            username: complexmathguy
            password: 
            repository: django-demo
            tag: latest
            host: github.com

       # -----------------------------------------------------------------------------
       # HashiCorp Terraform parameters
       # -----------------------------------------------------------------------------
        terraform:
            inUse: false
            provider: aws # options: aws, google, azure, nutanix
            region: us-east-1 # options: any cloud provider region
            ssh-fingerprint: 50:36:21:3f:3e:fd:de:fc:2f:1f:17:a6:09:6d:1b:dd

        # -----------------------------------------------------------------------------
        # AWS parameters
        # -----------------------------------------------------------------------------
        aws:
            key-pair-name: xxxxxxxxxxxx
            vpc: xxxxxxxxxxxxx
            ec2-instance-type: t2.medium # options: any AWS instance type
            access-key: ASSIGN__ON_CICD_PLATFORM_AS_ENV_VARS
            secret-key: ASSIGN__ON_CICD_PLATFORM_AS_ENV_VARS

        # -----------------------------------------------------------------------------
        # Kubernetes parameters: If not in use, and Terraform
        #                        is in use, physical infrastructure
        #                        will be provisioned on the provider
        # -----------------------------------------------------------------------------
        kubernetes:
            inUse: false
            host: https://xxx.xxx.xxx.xxx
            project: xxxxxxxxxxx # assigned project name
            region: us-central1-a # options: any provider region
            hostTarget: google # option: google, aws, azure, nutanix
            username: admin
            password: 5UhfcIPAPsiPXklT
            exposeAsService: true
            serviceType: LoadBalancer # options: LoadBalancer, NodePort, ClusterIP
            useSessionAffinity: true

       # -----------------------------------------------------------------------------
       # Artifact repository for build dependencies and binaries
       # -----------------------------------------------------------------------------
        artifact-repo:
            inUse: false
            type: nexus # options: nexus, jfrog
            userName: xxxxxxx
            password: xxxxxxxx
            email: xxxx.xxxxxx@xxxxxxx.com
            repoUrl: http://xxx.xxx.xxx.xxx:8081/repository/npm-public
